%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 40 0 R /F4 41 0 R /F5 42 0 R /F6 45 0 R 
  /F7 47 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/Contents 69 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
5 0 obj
<<
/Contents 70 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
6 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 40.01575 754.0394 239.4857 766.0394 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 754.7894 555.2598 766.7894 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 60.01575 736.0394 159.4957 748.0394 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 549.6998 736.7894 555.2598 748.7894 ] /Subtype /Link /Type /Annot
>>
endobj
10 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 369.8394 0 ] /Rect [ 60.01575 718.0394 190.6357 730.0394 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 369.8394 0 ] /Rect [ 549.6998 718.7894 555.2598 730.7894 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 163.8394 0 ] /Rect [ 60.01575 700.0394 146.1657 712.0394 ] /Subtype /Link /Type /Annot
>>
endobj
13 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 163.8394 0 ] /Rect [ 549.6998 700.7894 555.2598 712.7894 ] /Subtype /Link /Type /Annot
>>
endobj
14 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 682.0394 111.1357 694.0394 ] /Subtype /Link /Type /Annot
>>
endobj
15 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 682.7894 555.2598 694.7894 ] /Subtype /Link /Type /Annot
>>
endobj
16 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 754.2394 0 ] /Rect [ 100.0157 664.0394 171.7157 676.0394 ] /Subtype /Link /Type /Annot
>>
endobj
17 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 754.2394 0 ] /Rect [ 549.6998 664.7894 555.2598 676.7894 ] /Subtype /Link /Type /Annot
>>
endobj
18 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 675.0394 0 ] /Rect [ 100.0157 646.0394 163.9157 658.0394 ] /Subtype /Link /Type /Annot
>>
endobj
19 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 675.0394 0 ] /Rect [ 549.6998 646.7894 555.2598 658.7894 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 595.8394 0 ] /Rect [ 100.0157 628.0394 193.3957 640.0394 ] /Subtype /Link /Type /Annot
>>
endobj
21 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 595.8394 0 ] /Rect [ 549.6998 628.7894 555.2598 640.7894 ] /Subtype /Link /Type /Annot
>>
endobj
22 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 492.6394 0 ] /Rect [ 100.0157 610.0394 197.8257 622.0394 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 492.6394 0 ] /Rect [ 549.6998 610.7894 555.2598 622.7894 ] /Subtype /Link /Type /Annot
>>
endobj
24 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 401.4394 0 ] /Rect [ 100.0157 592.0394 223.9657 604.0394 ] /Subtype /Link /Type /Annot
>>
endobj
25 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 401.4394 0 ] /Rect [ 549.6998 592.7894 555.2598 604.7894 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 211.4394 0 ] /Rect [ 100.0157 574.0394 183.9457 586.0394 ] /Subtype /Link /Type /Annot
>>
endobj
27 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 211.4394 0 ] /Rect [ 549.6998 574.7894 555.2598 586.7894 ] /Subtype /Link /Type /Annot
>>
endobj
28 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 556.0394 228.4057 568.0394 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 556.7894 555.2598 568.7894 ] /Subtype /Link /Type /Annot
>>
endobj
30 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 729.4394 0 ] /Rect [ 100.0157 538.0394 148.3557 550.0394 ] /Subtype /Link /Type /Annot
>>
endobj
31 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 729.4394 0 ] /Rect [ 549.6998 538.7894 555.2598 550.7894 ] /Subtype /Link /Type /Annot
>>
endobj
32 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 650.2394 0 ] /Rect [ 100.0157 520.0394 248.4157 532.0394 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 650.2394 0 ] /Rect [ 549.6998 520.7894 555.2598 532.7894 ] /Subtype /Link /Type /Annot
>>
endobj
34 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 571.0394 0 ] /Rect [ 100.0157 502.0394 240.0757 514.0394 ] /Subtype /Link /Type /Annot
>>
endobj
35 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 571.0394 0 ] /Rect [ 549.6998 502.7894 555.2598 514.7894 ] /Subtype /Link /Type /Annot
>>
endobj
36 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 177.0394 0 ] /Rect [ 40.01575 484.0394 126.7157 496.0394 ] /Subtype /Link /Type /Annot
>>
endobj
37 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 177.0394 0 ] /Rect [ 549.6998 484.7894 555.2598 496.7894 ] /Subtype /Link /Type /Annot
>>
endobj
38 0 obj
<<
/Annots [ 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 15 0 R 
  16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 
  26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 
  36 0 R 37 0 R ] /Contents 71 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
39 0 obj
<<
/Contents 72 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
40 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
41 0 obj
<<
/BaseFont /ZapfDingbats /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
42 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font
>>
endobj
43 0 obj
<<
/A <<
/S /URI /Type /Action /URI (http://www.jayconrod.com/posts/37/a-simple-interpreter-from-scratch-in-python-part-1)
>> /Border [ 0 0 0 ] /Rect [ 243.9957 179.8394 267.3357 191.8394 ] /Subtype /Link /Type /Annot
>>
endobj
44 0 obj
<<
/Annots [ 43 0 R ] /Contents 73 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
45 0 obj
<<
/BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F6 /Subtype /Type1 /Type /Font
>>
endobj
46 0 obj
<<
/Contents 74 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
47 0 obj
<<
/BaseFont /Courier-Bold /Encoding /WinAnsiEncoding /Name /F7 /Subtype /Type1 /Type /Font
>>
endobj
48 0 obj
<<
/Contents 75 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
49 0 obj
<<
/Outlines 51 0 R /PageLabels 76 0 R /PageMode /UseNone /Pages 68 0 R /Type /Catalog
>>
endobj
50 0 obj
<<
/Author () /CreationDate (D:20200412175022-05'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20200412175022-05'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title () /Trapped /False
>>
endobj
51 0 obj
<<
/Count 20 /First 52 0 R /Last 67 0 R /Type /Outlines
>>
endobj
52 0 obj
<<
/Count 14 /Dest [ 44 0 R /XYZ 40.01575 787.0394 0 ] /First 53 0 R /Last 55 0 R /Next 67 0 R /Parent 51 0 R 
  /Title (Welcome to tectTutorial\220s documentation!)
>>
endobj
53 0 obj
<<
/Dest [ 44 0 R /XYZ 40.01575 747.0394 0 ] /Next 54 0 R /Parent 52 0 R /Title (What is Python really?)
>>
endobj
54 0 obj
<<
/Dest [ 44 0 R /XYZ 40.01575 369.8394 0 ] /Next 55 0 R /Parent 52 0 R /Prev 53 0 R /Title (How python code is executed)
>>
endobj
55 0 obj
<<
/Count 11 /Dest [ 44 0 R /XYZ 40.01575 163.8394 0 ] /First 56 0 R /Last 63 0 R /Parent 52 0 R /Prev 54 0 R 
  /Title (variables and types)
>>
endobj
56 0 obj
<<
/Count 6 /Dest [ 46 0 R /XYZ 40.01575 787.0394 0 ] /First 57 0 R /Last 62 0 R /Next 63 0 R /Parent 55 0 R 
  /Title (Strings)
>>
endobj
57 0 obj
<<
/Dest [ 46 0 R /XYZ 40.01575 754.2394 0 ] /Next 58 0 R /Parent 56 0 R /Title (String constants)
>>
endobj
58 0 obj
<<
/Dest [ 46 0 R /XYZ 40.01575 675.0394 0 ] /Next 59 0 R /Parent 56 0 R /Prev 57 0 R /Title (Multiline string)
>>
endobj
59 0 obj
<<
/Dest [ 46 0 R /XYZ 40.01575 595.8394 0 ] /Next 60 0 R /Parent 56 0 R /Prev 58 0 R /Title (String Concatenation)
>>
endobj
60 0 obj
<<
/Dest [ 46 0 R /XYZ 40.01575 492.6394 0 ] /Next 61 0 R /Parent 56 0 R /Prev 59 0 R /Title (Strings are Immutable)
>>
endobj
61 0 obj
<<
/Dest [ 46 0 R /XYZ 40.01575 401.4394 0 ] /Next 62 0 R /Parent 56 0 R /Prev 60 0 R /Title (String Indexing and Splicing)
>>
endobj
62 0 obj
<<
/Dest [ 46 0 R /XYZ 40.01575 211.4394 0 ] /Parent 56 0 R /Prev 61 0 R /Title (String Interpolation)
>>
endobj
63 0 obj
<<
/Count 3 /Dest [ 48 0 R /XYZ 40.01575 787.0394 0 ] /First 64 0 R /Last 66 0 R /Parent 55 0 R /Prev 56 0 R 
  /Title (Python Strings - Useful Functions)
>>
endobj
64 0 obj
<<
/Dest [ 48 0 R /XYZ 40.01575 729.4394 0 ] /Next 65 0 R /Parent 63 0 R /Title (capitalize\(\))
>>
endobj
65 0 obj
<<
/Dest [ 48 0 R /XYZ 40.01575 650.2394 0 ] /Next 66 0 R /Parent 63 0 R /Prev 64 0 R /Title (count\(str, beg=0, end=len\(string\)\))
>>
endobj
66 0 obj
<<
/Dest [ 48 0 R /XYZ 40.01575 571.0394 0 ] /Parent 63 0 R /Prev 65 0 R /Title (find\(str, beg=0, end=len\(string\)\))
>>
endobj
67 0 obj
<<
/Dest [ 48 0 R /XYZ 40.01575 177.0394 0 ] /Parent 51 0 R /Prev 52 0 R /Title (Indices and tables)
>>
endobj
68 0 obj
<<
/Count 7 /Kids [ 4 0 R 5 0 R 38 0 R 39 0 R 44 0 R 46 0 R 48 0 R ] /Type /Pages
>>
endobj
69 0 obj
<<
/Length 875
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 164.822 0 Td (Sample rst2pdf doc) Tj T* -164.822 0 Td ET
Q
Q
q
1 0 0 1 40.01575 745.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 24 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 3 Tm /F2 15 Tf 18 TL 230.9445 0 Td (version) Tj T* -230.9445 0 Td ET
Q
Q
q
1 0 0 1 40.01575 650 cm
Q
q
1 0 0 1 40.01575 629.6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL 232.284 0 Td (prashant) Tj T* -232.284 0 Td ET
Q
Q
q
1 0 0 1 40.01575 544.5606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F1 12 Tf 14.4 TL 220.602 0 Td (April 12, 2020) Tj T* -220.602 0 Td ET
Q
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
 
endstream
endobj
70 0 obj
<<
/Length 75
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
71 0 obj
<<
/Length 3991
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 481.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 273 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Welcome to tectTutorial\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 273 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 255 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (What is Python really?) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 255 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 237 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (How python code is executed) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 237 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 219 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (variables and types) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 219 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 201 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Strings) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 201 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 183 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (String constants) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 183 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Multiline string) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 165 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 147 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (String Concatenation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 147 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 129 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Strings are Immutable) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 129 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 111 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (String Indexing and Splicing) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 111 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 93 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (String Interpolation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 93 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 75 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Python Strings - Useful Functions) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 75 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 57 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (capitalize\(\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 57 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 39 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (count\(str, beg=0, end=len\(string\)\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 39 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 21 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (find\(str, beg=0, end=len\(string\)\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 21 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 3 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 481.0394 cm
Q
q
1 0 0 1 40.01575 481.0394 cm
Q
 
endstream
endobj
72 0 obj
<<
/Length 75
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
73 0 obj
<<
/Length 9194
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Welcome to tectTutorial\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 727.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (What is Python really?) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 715.8394 cm
Q
q
1 0 0 1 40.01575 715.8394 cm
Q
q
1 0 0 1 40.01575 691.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .248476 Tw 12 TL /F1 10 Tf 0 0 0 rg (Python is an ) Tj /F2 10 Tf (interpreted) Tj /F1 10 Tf ( language. That means that, unlike languages like C and its variants, Python does not) Tj T* 0 Tw (need to be compiled before it is run. Other interpreted languages include PHP and Ruby.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 691.8394 cm
Q
q
1 0 0 1 40.01575 685.8394 cm
Q
q
1 0 0 1 40.01575 673.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 673.8394 cm
Q
q
1 0 0 1 40.01575 667.8394 cm
Q
q
1 0 0 1 40.01575 667.8394 cm
Q
q
1 0 0 1 40.01575 643.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .449672 Tw 12 TL /F1 10 Tf 0 0 0 rg (Python is ) Tj /F2 10 Tf (dynamically) Tj /F1 10 Tf ( typed, this means that you don\222t need to state the types of variables when you declare) Tj T* 0 Tw (them or anything like that. You can do things like x=111 and then x=\224I\222m a string\224 without error) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 643.8394 cm
Q
q
1 0 0 1 40.01575 637.8394 cm
Q
q
1 0 0 1 40.01575 625.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 625.8394 cm
Q
q
1 0 0 1 40.01575 619.8394 cm
Q
q
1 0 0 1 40.01575 619.8394 cm
Q
q
1 0 0 1 40.01575 583.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .156711 Tw 12 TL /F1 10 Tf 0 0 0 rg (Python is well suited to ) Tj /F2 10 Tf (object orientated programming) Tj /F1 10 Tf ( in that it allows ) Tj /F2 10 Tf (the definition of classes along with) Tj T* 0 Tw 2.89493 Tw (composition and inheritance) Tj /F1 10 Tf (. Python does not have access specifiers \(like C++\222s public, private\), the) Tj T* 0 Tw (justification for this point is given as \223we are all adults here\223) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 583.8394 cm
Q
q
1 0 0 1 40.01575 577.8394 cm
Q
q
1 0 0 1 40.01575 565.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 565.8394 cm
Q
q
1 0 0 1 40.01575 559.8394 cm
Q
q
1 0 0 1 40.01575 559.8394 cm
Q
q
1 0 0 1 40.01575 535.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .057756 Tw 12 TL /F1 10 Tf 0 0 0 rg (in Python, ) Tj /F2 10 Tf (functions are first-class objects) Tj /F1 10 Tf (. This means that they can be assigned to variables, returned from) Tj T* 0 Tw (other functions and passed into functions. Classes are also first class objects) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 535.8394 cm
Q
q
1 0 0 1 40.01575 529.8394 cm
Q
q
1 0 0 1 40.01575 517.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 517.8394 cm
Q
q
1 0 0 1 40.01575 511.8394 cm
Q
q
1 0 0 1 40.01575 511.8394 cm
Q
q
1 0 0 1 40.01575 463.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 38 Tm 1.51694 Tw 12 TL /F1 10 Tf 0 0 0 rg (Writing Python ) Tj /F2 10 Tf (code is quick) Tj /F1 10 Tf ( but running it is often ) Tj /F3 10 Tf (slower) Tj /F1 10 Tf ( than compiled languages. Fortunately) Tj /F4 10 Tf 12 TL (n) Tj /F1 10 Tf 12 TL ( Python) Tj T* 0 Tw .935535 Tw (allows the inclusion of C based extensions so bottlenecks can be optimized away and often are. The numpy) Tj T* 0 Tw 1.017705 Tw (package is a good example of this, it\222s really quite quick because a lot of the number crunching it does isn\222t) Tj T* 0 Tw (actually done by Python) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 463.8394 cm
Q
q
1 0 0 1 40.01575 457.8394 cm
Q
q
1 0 0 1 40.01575 445.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 445.8394 cm
Q
q
1 0 0 1 40.01575 439.8394 cm
Q
q
1 0 0 1 40.01575 439.8394 cm
Q
q
1 0 0 1 40.01575 403.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 4.093392 Tw 12 TL /F1 10 Tf 0 0 0 rg (Python finds use in many spheres - ) Tj /F2 10 Tf (web applications, automation, scientific modeling, big data) Tj /F1 10 Tf  T* 0 Tw .048561 Tw (applications and many more. It\222s also often used as \223glue\224 code to get other languages and components to play) Tj T* 0 Tw (nice) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 403.8394 cm
Q
q
1 0 0 1 40.01575 397.8394 cm
Q
q
1 0 0 1 40.01575 385.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 385.8394 cm
Q
q
1 0 0 1 40.01575 350.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (How python code is executed) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 332.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (At the command line:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 313.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (a = "hello\223) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 293.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four steps that python takes when you hit return lexing, parsing, compiling, and interpreting) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 227.8394 cm
q
BT 1 0 0 1 0 50 Tm -0.093905 Tw 12 TL /F1 10 Tf 0 0 0 rg (1. ) Tj /F2 10 Tf (Lexing) Tj /F1 10 Tf ( is breaking the line of code you just typed into ) Tj /F2 10 Tf (tokens) Tj /F1 10 Tf ( | 2. The ) Tj /F2 10 Tf (parser) Tj /F1 10 Tf ( takes those ) Tj /F2 10 Tf (tokens) Tj /F1 10 Tf ( and generates a) Tj T* 0 Tw .350783 Tw (structure that shows their relationship to each other \(in this case, an ) Tj /F2 10 Tf (Abstract SyntaxTree) Tj /F1 10 Tf (\). | 3. The ) Tj /F2 10 Tf (compiler) Tj /F1 10 Tf ( then) Tj T* 0 Tw 1.472321 Tw (takes the ) Tj /F2 10 Tf (AST) Tj /F1 10 Tf ( and turns it into one \(or more\) ) Tj /F2 10 Tf (code objects) Tj /F1 10 Tf (. \(function objects, code objects, and bytecode\) | 4.) Tj T* 0 Tw 1.864358 Tw (Finally, the ) Tj /F2 10 Tf (interpreter) Tj /F1 10 Tf ( takes each code object \(It contains information that this interpreter needs to do its job\)) Tj T* 0 Tw (executes the code it represents) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 221.8394 cm
Q
q
1 0 0 1 40.01575 209.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 197.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 197.8394 cm
Q
q
1 0 0 1 40.01575 179.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (to understand how Lexing,prasar & AST work ) Tj 0 0 .501961 rg (a link) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 144.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (variables and types) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 132.6394 cm
Q
q
1 0 0 1 40.01575 132.6394 cm
Q
q
1 0 0 1 40.01575 120.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Python is completely object oriented) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 114.6394 cm
Q
q
1 0 0 1 40.01575 102.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (No need to declare variable before using them or declare their type) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 96.63937 cm
Q
q
1 0 0 1 40.01575 84.63937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Every variable) Tj /F1 10 Tf ( in Python is an ) Tj /F2 10 Tf (Object) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 84.63937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to tectTutorial\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
 
endstream
endobj
74 0 obj
<<
/Length 5027
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F6 14 Tf .12549 .262745 .360784 rg (Strings) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 739.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (String constants) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 721.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (are delimited with \223 \224 \(double quotes\) or \221 \221 \(single quotes\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 691.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( h = \223Hello World\224) Tj T* (>) Tj (>) Tj ( h = \221Hello World\222) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 660.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (Multiline string) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 642.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (String constant can contain new line by using double quotes or single quotes:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 611.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( h = \223\224\224 Hi) Tj T* (    How are you\224\224\224) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 581.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (String Concatenation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 563.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use + sign to concate 2 strings:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 508.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
BT 1 0 0 1 0 38 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( s = \223hi\224) Tj T* (>) Tj (>) Tj ( t =  \223How are you\224) Tj T* (>) Tj (>) Tj ( print\(s + t\)) Tj T* (Hi How are you) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 478.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (Strings are Immutable) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 460.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (String cannot be modified like in programming language \(like c\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 417.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 42 re B*
Q
q
BT 1 0 0 1 0 26 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( h = \223Hello world\224) Tj T* (>) Tj (>) Tj ( h[2] = \221g\222) Tj T* (TypeError: \221str\222 object does not support item assignment.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 387.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (String Indexing and Splicing) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 369.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (String can be indexed like in C:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 326.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 42 re B*
Q
q
BT 1 0 0 1 0 26 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( h = \223hello world\224) Tj T* (>) Tj (>) Tj ( h[0]     # note index starts from zero) Tj T* (H) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 306.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (String can be sliced:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 227.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 78 re B*
Q
q
BT 1 0 0 1 0 62 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj (h[2:5]) Tj T* (llo) Tj T* (>) Tj (>) Tj (h[2:]) Tj T* (llo world) Tj T* (>) Tj (>) Tj (h[:2]) Tj T* (he) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 197.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (String Interpolation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 179.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The mod\(%\) operator in string is used for formatting or to insert variable in a string:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 112.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
BT 1 0 0 1 0 50 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( print \223There are %d orange in the basket\224 % 32) Tj T* (There are 32 orange in the basket) Tj T*  T* (>) Tj (>) Tj ( print \223There are %d %s and %d %s in the basket\224 % \(32, \221orange\222, 12, \221apple\222\)) Tj T* (There are 32 orange and 12 apple in the basket) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to tectTutorial\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
 
endstream
endobj
75 0 obj
<<
/Length 7014
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F6 14 Tf .12549 .262745 .360784 rg (Python Strings - Useful Functions) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 745.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (S = \223Jack and Jill\224) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 715.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (capitalize\(\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 697.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Capitalizes first letter of the string:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 666.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( s.capitalize\(\)) Tj T* (>) Tj (>) Tj ( Jack And Jill) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 635.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (count\(str, beg=0, end=len\(string\)\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 617.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Count how many times str occurs in a string or in a substring \(if beg and end is given\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 587.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( s.count\(\221J\222\)) Tj T* (2) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 556.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (find\(str, beg=0, end=len\(string\)\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 526.6394 cm
q
BT 1 0 0 1 0 14 Tm .202913 Tw 12 TL /F1 10 Tf 0 0 0 rg (Determine if str occurs in string or in a substring of string if starting index ) Tj /F3 10 Tf (beg) Tj /F1 10 Tf ( and ending index ) Tj /F3 10 Tf (end) Tj /F1 10 Tf ( are given return) Tj T* 0 Tw /F2 10 Tf (index) Tj /F1 10 Tf ( if found else ) Tj /F2 10 Tf (-1) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 471.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
BT 1 0 0 1 0 38 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( s.find\(\221and\222\)) Tj T* (>) Tj (>) Tj ( 5) Tj T* (>) Tj (>) Tj ( s.find\(\221j\222\)) Tj T* (>) Tj (>) Tj ( -1) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 457.8394 cm
Q
q
1 0 0 1 40.01575 457.8394 cm
Q
q
1 0 0 1 40.01575 388.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Numbers) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 44 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Python Support 2 type of numbers Integer and Floating point number) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To define an Integer use x = 7) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To define a floating point number use x = 7.0) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 382.8394 cm
Q
q
1 0 0 1 40.01575 193.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 174.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 174.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Object Types) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 164.8 Tm  T* ET
q
1 0 0 1 20 168.8 cm
Q
q
1 0 0 1 20 168.8 cm
Q
q
1 0 0 1 20 156.8 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Python automatically assign object type based on the assignment) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 150.8 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 135.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 135.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For example) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 448.4441 138 re B*
Q
q
BT 1 0 0 1 0 122 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( x = 7) Tj T* (>) Tj (>) Tj ( type\(x\)) Tj T* (<) Tj (type 'int') Tj (>) Tj  T*  T* (>) Tj (>) Tj ( x = 'abc') Tj T* (>) Tj (>) Tj ( type\(x\)) Tj T* (<) Tj (type 'str') Tj (>) Tj  T*  T* (>) Tj (>) Tj ( x = 7.7) Tj T* (>) Tj (>) Tj ( type\(x\)) Tj T* (<) Tj (type 'float') Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 193.0394 cm
Q
q
1 0 0 1 40.01575 153.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 141.0394 cm
Q
q
1 0 0 1 40.01575 141.0394 cm
Q
q
1 0 0 1 40.01575 129.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 48 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F7 10 Tf 0 0 0 rg (genindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 123.0394 cm
Q
q
1 0 0 1 40.01575 111.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 48 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F7 10 Tf 0 0 0 rg (modindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 105.0394 cm
Q
q
1 0 0 1 40.01575 93.03937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 36 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F7 10 Tf 0 0 0 rg (search) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 93.03937 cm
Q
q
1 0 0 1 40.01575 93.03937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
 
endstream
endobj
76 0 obj
<<
/Nums [ 0 77 0 R 1 78 0 R 2 79 0 R 3 80 0 R 4 81 0 R 
  5 82 0 R 6 83 0 R ]
>>
endobj
77 0 obj
<<
/S /D /St 1
>>
endobj
78 0 obj
<<
/S /D /St 2
>>
endobj
79 0 obj
<<
/S /r /St 1
>>
endobj
80 0 obj
<<
/S /r /St 2
>>
endobj
81 0 obj
<<
/S /D /St 1
>>
endobj
82 0 obj
<<
/S /D /St 2
>>
endobj
83 0 obj
<<
/S /D /St 3
>>
endobj
xref
0 84
0000000000 65535 f 
0000000073 00000 n 
0000000172 00000 n 
0000000279 00000 n 
0000000391 00000 n 
0000000596 00000 n 
0000000801 00000 n 
0000000969 00000 n 
0000001137 00000 n 
0000001305 00000 n 
0000001473 00000 n 
0000001642 00000 n 
0000001811 00000 n 
0000001980 00000 n 
0000002149 00000 n 
0000002318 00000 n 
0000002487 00000 n 
0000002656 00000 n 
0000002825 00000 n 
0000002994 00000 n 
0000003163 00000 n 
0000003332 00000 n 
0000003501 00000 n 
0000003670 00000 n 
0000003839 00000 n 
0000004008 00000 n 
0000004177 00000 n 
0000004346 00000 n 
0000004515 00000 n 
0000004684 00000 n 
0000004853 00000 n 
0000005022 00000 n 
0000005191 00000 n 
0000005360 00000 n 
0000005529 00000 n 
0000005698 00000 n 
0000005867 00000 n 
0000006036 00000 n 
0000006205 00000 n 
0000006652 00000 n 
0000006858 00000 n 
0000006974 00000 n 
0000007058 00000 n 
0000007164 00000 n 
0000007401 00000 n 
0000007626 00000 n 
0000007746 00000 n 
0000007952 00000 n 
0000008063 00000 n 
0000008269 00000 n 
0000008375 00000 n 
0000008633 00000 n 
0000008708 00000 n 
0000008893 00000 n 
0000009017 00000 n 
0000009159 00000 n 
0000009320 00000 n 
0000009468 00000 n 
0000009586 00000 n 
0000009717 00000 n 
0000009852 00000 n 
0000009988 00000 n 
0000010131 00000 n 
0000010253 00000 n 
0000010427 00000 n 
0000010543 00000 n 
0000010696 00000 n 
0000010835 00000 n 
0000010955 00000 n 
0000011056 00000 n 
0000011982 00000 n 
0000012107 00000 n 
0000016150 00000 n 
0000016275 00000 n 
0000025521 00000 n 
0000030600 00000 n 
0000037666 00000 n 
0000037764 00000 n 
0000037798 00000 n 
0000037832 00000 n 
0000037866 00000 n 
0000037900 00000 n 
0000037934 00000 n 
0000037968 00000 n 
trailer
<<
/ID 
[<e676e2c981b5cc7d375ab5b1969b1126><e676e2c981b5cc7d375ab5b1969b1126>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 50 0 R
/Root 49 0 R
/Size 84
>>
startxref
38002
%%EOF
%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<<
/F1 2 0 R /F2 3 0 R /F3 40 0 R /F4 41 0 R /F5 42 0 R /F6 45 0 R 
  /F7 47 0 R
>>
endobj
2 0 obj
<<
/BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font
>>
endobj
3 0 obj
<<
/BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font
>>
endobj
4 0 obj
<<
/Contents 69 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
5 0 obj
<<
/Contents 70 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
6 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 40.01575 754.0394 239.4857 766.0394 ] /Subtype /Link /Type /Annot
>>
endobj
7 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 754.7894 555.2598 766.7894 ] /Subtype /Link /Type /Annot
>>
endobj
8 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 60.01575 736.0394 159.4957 748.0394 ] /Subtype /Link /Type /Annot
>>
endobj
9 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 747.0394 0 ] /Rect [ 549.6998 736.7894 555.2598 748.7894 ] /Subtype /Link /Type /Annot
>>
endobj
10 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 369.8394 0 ] /Rect [ 60.01575 718.0394 190.6357 730.0394 ] /Subtype /Link /Type /Annot
>>
endobj
11 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 369.8394 0 ] /Rect [ 549.6998 718.7894 555.2598 730.7894 ] /Subtype /Link /Type /Annot
>>
endobj
12 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 163.8394 0 ] /Rect [ 60.01575 700.0394 146.1657 712.0394 ] /Subtype /Link /Type /Annot
>>
endobj
13 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 44 0 R /XYZ 40.01575 163.8394 0 ] /Rect [ 549.6998 700.7894 555.2598 712.7894 ] /Subtype /Link /Type /Annot
>>
endobj
14 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 80.01575 682.0394 111.1357 694.0394 ] /Subtype /Link /Type /Annot
>>
endobj
15 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 787.0394 0 ] /Rect [ 549.6998 682.7894 555.2598 694.7894 ] /Subtype /Link /Type /Annot
>>
endobj
16 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 754.2394 0 ] /Rect [ 100.0157 664.0394 171.7157 676.0394 ] /Subtype /Link /Type /Annot
>>
endobj
17 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 754.2394 0 ] /Rect [ 549.6998 664.7894 555.2598 676.7894 ] /Subtype /Link /Type /Annot
>>
endobj
18 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 675.0394 0 ] /Rect [ 100.0157 646.0394 163.9157 658.0394 ] /Subtype /Link /Type /Annot
>>
endobj
19 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 675.0394 0 ] /Rect [ 549.6998 646.7894 555.2598 658.7894 ] /Subtype /Link /Type /Annot
>>
endobj
20 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 595.8394 0 ] /Rect [ 100.0157 628.0394 193.3957 640.0394 ] /Subtype /Link /Type /Annot
>>
endobj
21 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 595.8394 0 ] /Rect [ 549.6998 628.7894 555.2598 640.7894 ] /Subtype /Link /Type /Annot
>>
endobj
22 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 492.6394 0 ] /Rect [ 100.0157 610.0394 197.8257 622.0394 ] /Subtype /Link /Type /Annot
>>
endobj
23 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 492.6394 0 ] /Rect [ 549.6998 610.7894 555.2598 622.7894 ] /Subtype /Link /Type /Annot
>>
endobj
24 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 401.4394 0 ] /Rect [ 100.0157 592.0394 223.9657 604.0394 ] /Subtype /Link /Type /Annot
>>
endobj
25 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 401.4394 0 ] /Rect [ 549.6998 592.7894 555.2598 604.7894 ] /Subtype /Link /Type /Annot
>>
endobj
26 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 211.4394 0 ] /Rect [ 100.0157 574.0394 183.9457 586.0394 ] /Subtype /Link /Type /Annot
>>
endobj
27 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 211.4394 0 ] /Rect [ 549.6998 574.7894 555.2598 586.7894 ] /Subtype /Link /Type /Annot
>>
endobj
28 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 96.23937 0 ] /Rect [ 80.01575 556.0394 228.4057 568.0394 ] /Subtype /Link /Type /Annot
>>
endobj
29 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 46 0 R /XYZ 40.01575 96.23937 0 ] /Rect [ 549.6998 556.7894 555.2598 568.7894 ] /Subtype /Link /Type /Annot
>>
endobj
30 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 752.2394 0 ] /Rect [ 100.0157 538.0394 148.3557 550.0394 ] /Subtype /Link /Type /Annot
>>
endobj
31 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 752.2394 0 ] /Rect [ 549.6998 538.7894 555.2598 550.7894 ] /Subtype /Link /Type /Annot
>>
endobj
32 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 673.0394 0 ] /Rect [ 100.0157 520.0394 248.4157 532.0394 ] /Subtype /Link /Type /Annot
>>
endobj
33 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 673.0394 0 ] /Rect [ 549.6998 520.7894 555.2598 532.7894 ] /Subtype /Link /Type /Annot
>>
endobj
34 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 593.8394 0 ] /Rect [ 100.0157 502.0394 240.0757 514.0394 ] /Subtype /Link /Type /Annot
>>
endobj
35 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 593.8394 0 ] /Rect [ 549.6998 502.7894 555.2598 514.7894 ] /Subtype /Link /Type /Annot
>>
endobj
36 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 199.8394 0 ] /Rect [ 40.01575 484.0394 126.7157 496.0394 ] /Subtype /Link /Type /Annot
>>
endobj
37 0 obj
<<
/Border [ 0 0 0 ] /Contents () /Dest [ 48 0 R /XYZ 40.01575 199.8394 0 ] /Rect [ 549.6998 484.7894 555.2598 496.7894 ] /Subtype /Link /Type /Annot
>>
endobj
38 0 obj
<<
/Annots [ 6 0 R 7 0 R 8 0 R 9 0 R 10 0 R 11 0 R 12 0 R 13 0 R 14 0 R 15 0 R 
  16 0 R 17 0 R 18 0 R 19 0 R 20 0 R 21 0 R 22 0 R 23 0 R 24 0 R 25 0 R 
  26 0 R 27 0 R 28 0 R 29 0 R 30 0 R 31 0 R 32 0 R 33 0 R 34 0 R 35 0 R 
  36 0 R 37 0 R ] /Contents 71 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
39 0 obj
<<
/Contents 72 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
40 0 obj
<<
/BaseFont /Helvetica-Oblique /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font
>>
endobj
41 0 obj
<<
/BaseFont /ZapfDingbats /Name /F4 /Subtype /Type1 /Type /Font
>>
endobj
42 0 obj
<<
/BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F5 /Subtype /Type1 /Type /Font
>>
endobj
43 0 obj
<<
/A <<
/S /URI /Type /Action /URI (http://www.jayconrod.com/posts/37/a-simple-interpreter-from-scratch-in-python-part-1)
>> /Border [ 0 0 0 ] /Rect [ 243.9957 179.8394 267.3357 191.8394 ] /Subtype /Link /Type /Annot
>>
endobj
44 0 obj
<<
/Annots [ 43 0 R ] /Contents 73 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 
  /Trans <<

>> /Type /Page
>>
endobj
45 0 obj
<<
/BaseFont /Helvetica-BoldOblique /Encoding /WinAnsiEncoding /Name /F6 /Subtype /Type1 /Type /Font
>>
endobj
46 0 obj
<<
/Contents 74 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
47 0 obj
<<
/BaseFont /Courier-Bold /Encoding /WinAnsiEncoding /Name /F7 /Subtype /Type1 /Type /Font
>>
endobj
48 0 obj
<<
/Contents 75 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 68 0 R /Resources <<
/Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ]
>> /Rotate 0 /Trans <<

>> 
  /Type /Page
>>
endobj
49 0 obj
<<
/Outlines 51 0 R /PageLabels 76 0 R /PageMode /UseNone /Pages 68 0 R /Type /Catalog
>>
endobj
50 0 obj
<<
/Author () /CreationDate (D:20200412175022-05'00') /Creator (\(unspecified\)) /Keywords () /ModDate (D:20200412175022-05'00') /Producer (ReportLab PDF Library - www.reportlab.com) 
  /Subject (\(unspecified\)) /Title () /Trapped /False
>>
endobj
51 0 obj
<<
/Count 20 /First 52 0 R /Last 67 0 R /Type /Outlines
>>
endobj
52 0 obj
<<
/Count 14 /Dest [ 44 0 R /XYZ 40.01575 787.0394 0 ] /First 53 0 R /Last 55 0 R /Next 67 0 R /Parent 51 0 R 
  /Title (Welcome to tectTutorial\220s documentation!)
>>
endobj
53 0 obj
<<
/Dest [ 44 0 R /XYZ 40.01575 747.0394 0 ] /Next 54 0 R /Parent 52 0 R /Title (What is Python really?)
>>
endobj
54 0 obj
<<
/Dest [ 44 0 R /XYZ 40.01575 369.8394 0 ] /Next 55 0 R /Parent 52 0 R /Prev 53 0 R /Title (How python code is executed)
>>
endobj
55 0 obj
<<
/Count 11 /Dest [ 44 0 R /XYZ 40.01575 163.8394 0 ] /First 56 0 R /Last 63 0 R /Parent 52 0 R /Prev 54 0 R 
  /Title (variables and types)
>>
endobj
56 0 obj
<<
/Count 6 /Dest [ 46 0 R /XYZ 40.01575 787.0394 0 ] /First 57 0 R /Last 62 0 R /Next 63 0 R /Parent 55 0 R 
  /Title (Strings)
>>
endobj
57 0 obj
<<
/Dest [ 46 0 R /XYZ 40.01575 754.2394 0 ] /Next 58 0 R /Parent 56 0 R /Title (String constants)
>>
endobj
58 0 obj
<<
/Dest [ 46 0 R /XYZ 40.01575 675.0394 0 ] /Next 59 0 R /Parent 56 0 R /Prev 57 0 R /Title (Multiline string)
>>
endobj
59 0 obj
<<
/Dest [ 46 0 R /XYZ 40.01575 595.8394 0 ] /Next 60 0 R /Parent 56 0 R /Prev 58 0 R /Title (String Concatenation)
>>
endobj
60 0 obj
<<
/Dest [ 46 0 R /XYZ 40.01575 492.6394 0 ] /Next 61 0 R /Parent 56 0 R /Prev 59 0 R /Title (Strings are Immutable)
>>
endobj
61 0 obj
<<
/Dest [ 46 0 R /XYZ 40.01575 401.4394 0 ] /Next 62 0 R /Parent 56 0 R /Prev 60 0 R /Title (String Indexing and Splicing)
>>
endobj
62 0 obj
<<
/Dest [ 46 0 R /XYZ 40.01575 211.4394 0 ] /Parent 56 0 R /Prev 61 0 R /Title (String Interpolation)
>>
endobj
63 0 obj
<<
/Count 3 /Dest [ 46 0 R /XYZ 40.01575 96.23937 0 ] /First 64 0 R /Last 66 0 R /Parent 55 0 R /Prev 56 0 R 
  /Title (Python Strings - Useful Functions)
>>
endobj
64 0 obj
<<
/Dest [ 48 0 R /XYZ 40.01575 752.2394 0 ] /Next 65 0 R /Parent 63 0 R /Title (capitalize\(\))
>>
endobj
65 0 obj
<<
/Dest [ 48 0 R /XYZ 40.01575 673.0394 0 ] /Next 66 0 R /Parent 63 0 R /Prev 64 0 R /Title (count\(str, beg=0, end=len\(string\)\))
>>
endobj
66 0 obj
<<
/Dest [ 48 0 R /XYZ 40.01575 593.8394 0 ] /Parent 63 0 R /Prev 65 0 R /Title (find\(str, beg=0, end=len\(string\)\))
>>
endobj
67 0 obj
<<
/Dest [ 48 0 R /XYZ 40.01575 199.8394 0 ] /Parent 51 0 R /Prev 52 0 R /Title (Indices and tables)
>>
endobj
68 0 obj
<<
/Count 7 /Kids [ 4 0 R 5 0 R 38 0 R 39 0 R 44 0 R 46 0 R 48 0 R ] /Type /Pages
>>
endobj
69 0 obj
<<
/Length 875
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 164.822 0 Td (Sample rst2pdf doc) Tj T* -164.822 0 Td ET
Q
Q
q
1 0 0 1 40.01575 745.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 24 re B*
Q
q
.12549 .262745 .360784 rg
BT 1 0 0 1 0 3 Tm /F2 15 Tf 18 TL 230.9445 0 Td (version) Tj T* -230.9445 0 Td ET
Q
Q
q
1 0 0 1 40.01575 650 cm
Q
q
1 0 0 1 40.01575 629.6 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F2 12 Tf 14.4 TL 232.284 0 Td (prashant) Tj T* -232.284 0 Td ET
Q
Q
q
1 0 0 1 40.01575 544.5606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
q
0 0 0 rg
BT 1 0 0 1 0 2.4 Tm /F1 12 Tf 14.4 TL 220.602 0 Td (April 12, 2020) Tj T* -220.602 0 Td ET
Q
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
q
1 0 0 1 40.01575 524.1606 cm
Q
 
endstream
endobj
70 0 obj
<<
/Length 75
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
71 0 obj
<<
/Length 3991
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 775.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Contents) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 481.0394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 0 273 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Welcome to tectTutorial\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 273 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 255 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (What is Python really?) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 255 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 237 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (How python code is executed) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 237 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 219 cm
q
BT 1 0 0 1 20 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (variables and types) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 219 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (1) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 201 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Strings) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 201 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 183 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (String constants) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 183 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 165 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Multiline string) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 165 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 147 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (String Concatenation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 147 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 129 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Strings are Immutable) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 129 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 111 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (String Indexing and Splicing) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 111 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 93 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (String Interpolation) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 93 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 75 cm
q
BT 1 0 0 1 40 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (Python Strings - Useful Functions) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 75 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (2) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 57 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (capitalize\(\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 57 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 39 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (count\(str, beg=0, end=len\(string\)\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 39 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 21 cm
q
BT 1 0 0 1 60 2 Tm 12 TL /F1 10 Tf 0 0 .501961 rg (find\(str, beg=0, end=len\(string\)\)) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 21 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
1 0 0 1 0 3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 .501961 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 443.2441 3 cm
q
0 0 .501961 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL 66.44 0 Td (3) Tj T* -66.44 0 Td ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 481.0394 cm
Q
q
1 0 0 1 40.01575 481.0394 cm
Q
 
endstream
endobj
72 0 obj
<<
/Length 75
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 799.0394 cm
Q
 
endstream
endobj
73 0 obj
<<
/Length 9194
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 763.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Welcome to tectTutorial\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 727.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (What is Python really?) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 715.8394 cm
Q
q
1 0 0 1 40.01575 715.8394 cm
Q
q
1 0 0 1 40.01575 691.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .248476 Tw 12 TL /F1 10 Tf 0 0 0 rg (Python is an ) Tj /F2 10 Tf (interpreted) Tj /F1 10 Tf ( language. That means that, unlike languages like C and its variants, Python does not) Tj T* 0 Tw (need to be compiled before it is run. Other interpreted languages include PHP and Ruby.) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 691.8394 cm
Q
q
1 0 0 1 40.01575 685.8394 cm
Q
q
1 0 0 1 40.01575 673.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 673.8394 cm
Q
q
1 0 0 1 40.01575 667.8394 cm
Q
q
1 0 0 1 40.01575 667.8394 cm
Q
q
1 0 0 1 40.01575 643.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .449672 Tw 12 TL /F1 10 Tf 0 0 0 rg (Python is ) Tj /F2 10 Tf (dynamically) Tj /F1 10 Tf ( typed, this means that you don\222t need to state the types of variables when you declare) Tj T* 0 Tw (them or anything like that. You can do things like x=111 and then x=\224I\222m a string\224 without error) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 643.8394 cm
Q
q
1 0 0 1 40.01575 637.8394 cm
Q
q
1 0 0 1 40.01575 625.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 625.8394 cm
Q
q
1 0 0 1 40.01575 619.8394 cm
Q
q
1 0 0 1 40.01575 619.8394 cm
Q
q
1 0 0 1 40.01575 583.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm .156711 Tw 12 TL /F1 10 Tf 0 0 0 rg (Python is well suited to ) Tj /F2 10 Tf (object orientated programming) Tj /F1 10 Tf ( in that it allows ) Tj /F2 10 Tf (the definition of classes along with) Tj T* 0 Tw 2.89493 Tw (composition and inheritance) Tj /F1 10 Tf (. Python does not have access specifiers \(like C++\222s public, private\), the) Tj T* 0 Tw (justification for this point is given as \223we are all adults here\223) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 583.8394 cm
Q
q
1 0 0 1 40.01575 577.8394 cm
Q
q
1 0 0 1 40.01575 565.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 565.8394 cm
Q
q
1 0 0 1 40.01575 559.8394 cm
Q
q
1 0 0 1 40.01575 559.8394 cm
Q
q
1 0 0 1 40.01575 535.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 9 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 14 Tm .057756 Tw 12 TL /F1 10 Tf 0 0 0 rg (in Python, ) Tj /F2 10 Tf (functions are first-class objects) Tj /F1 10 Tf (. This means that they can be assigned to variables, returned from) Tj T* 0 Tw (other functions and passed into functions. Classes are also first class objects) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 535.8394 cm
Q
q
1 0 0 1 40.01575 529.8394 cm
Q
q
1 0 0 1 40.01575 517.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 517.8394 cm
Q
q
1 0 0 1 40.01575 511.8394 cm
Q
q
1 0 0 1 40.01575 511.8394 cm
Q
q
1 0 0 1 40.01575 463.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 33 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 38 Tm 1.51694 Tw 12 TL /F1 10 Tf 0 0 0 rg (Writing Python ) Tj /F2 10 Tf (code is quick) Tj /F1 10 Tf ( but running it is often ) Tj /F3 10 Tf (slower) Tj /F1 10 Tf ( than compiled languages. Fortunately) Tj /F4 10 Tf 12 TL (n) Tj /F1 10 Tf 12 TL ( Python) Tj T* 0 Tw .935535 Tw (allows the inclusion of C based extensions so bottlenecks can be optimized away and often are. The numpy) Tj T* 0 Tw 1.017705 Tw (package is a good example of this, it\222s really quite quick because a lot of the number crunching it does isn\222t) Tj T* 0 Tw (actually done by Python) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 463.8394 cm
Q
q
1 0 0 1 40.01575 457.8394 cm
Q
q
1 0 0 1 40.01575 445.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 445.8394 cm
Q
q
1 0 0 1 40.01575 439.8394 cm
Q
q
1 0 0 1 40.01575 439.8394 cm
Q
q
1 0 0 1 40.01575 403.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 21 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 26 Tm 4.093392 Tw 12 TL /F1 10 Tf 0 0 0 rg (Python finds use in many spheres - ) Tj /F2 10 Tf (web applications, automation, scientific modeling, big data) Tj /F1 10 Tf  T* 0 Tw .048561 Tw (applications and many more. It\222s also often used as \223glue\224 code to get other languages and components to play) Tj T* 0 Tw (nice) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 403.8394 cm
Q
q
1 0 0 1 40.01575 397.8394 cm
Q
q
1 0 0 1 40.01575 385.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 385.8394 cm
Q
q
1 0 0 1 40.01575 350.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (How python code is executed) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 332.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (At the command line:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 313.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (a = "hello\223) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 293.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (There are four steps that python takes when you hit return lexing, parsing, compiling, and interpreting) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 227.8394 cm
q
BT 1 0 0 1 0 50 Tm -0.093905 Tw 12 TL /F1 10 Tf 0 0 0 rg (1. ) Tj /F2 10 Tf (Lexing) Tj /F1 10 Tf ( is breaking the line of code you just typed into ) Tj /F2 10 Tf (tokens) Tj /F1 10 Tf ( | 2. The ) Tj /F2 10 Tf (parser) Tj /F1 10 Tf ( takes those ) Tj /F2 10 Tf (tokens) Tj /F1 10 Tf ( and generates a) Tj T* 0 Tw .350783 Tw (structure that shows their relationship to each other \(in this case, an ) Tj /F2 10 Tf (Abstract SyntaxTree) Tj /F1 10 Tf (\). | 3. The ) Tj /F2 10 Tf (compiler) Tj /F1 10 Tf ( then) Tj T* 0 Tw 1.472321 Tw (takes the ) Tj /F2 10 Tf (AST) Tj /F1 10 Tf ( and turns it into one \(or more\) ) Tj /F2 10 Tf (code objects) Tj /F1 10 Tf (. \(function objects, code objects, and bytecode\) | 4.) Tj T* 0 Tw 1.864358 Tw (Finally, the ) Tj /F2 10 Tf (interpreter) Tj /F1 10 Tf ( takes each code object \(It contains information that this interpreter needs to do its job\)) Tj T* 0 Tw (executes the code it represents) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 221.8394 cm
Q
q
1 0 0 1 40.01575 209.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 197.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL ( ) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 197.8394 cm
Q
q
1 0 0 1 40.01575 179.8394 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (to understand how Lexing,prasar & AST work ) Tj 0 0 .501961 rg (a link) Tj 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 144.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 25.2 re B*
Q
q
BT 1 0 0 1 0 3.2 Tm 19.2 TL /F2 16 Tf .12549 .262745 .360784 rg (variables and types) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 132.6394 cm
Q
q
1 0 0 1 40.01575 132.6394 cm
Q
q
1 0 0 1 40.01575 120.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Python is completely object oriented) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 114.6394 cm
Q
q
1 0 0 1 40.01575 102.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (No need to declare variable before using them or declare their type) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 96.63937 cm
Q
q
1 0 0 1 40.01575 84.63937 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F2 10 Tf 0 0 0 rg (Every variable) Tj /F1 10 Tf ( in Python is an ) Tj /F2 10 Tf (Object) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 84.63937 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to tectTutorial\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (1) Tj T* ET
Q
Q
 
endstream
endobj
74 0 obj
<<
/Length 5246
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 770.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F6 14 Tf .12549 .262745 .360784 rg (Strings) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 739.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (String constants) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 721.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (are delimited with \223 \224 \(double quotes\) or \221 \221 \(single quotes\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 691.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( h = \223Hello World\224) Tj T* (>) Tj (>) Tj ( h = \221Hello World\222) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 660.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (Multiline string) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 642.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (String constant can contain new line by using double quotes or single quotes:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 611.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( h = \223\224\224 Hi) Tj T* (    How are you\224\224\224) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 581.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (String Concatenation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 563.4394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Use + sign to concate 2 strings:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 508.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
BT 1 0 0 1 0 38 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( s = \223hi\224) Tj T* (>) Tj (>) Tj ( t =  \223How are you\224) Tj T* (>) Tj (>) Tj ( print\(s + t\)) Tj T* (Hi How are you) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 478.2394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (Strings are Immutable) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 460.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (String cannot be modified like in programming language \(like c\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 417.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 42 re B*
Q
q
BT 1 0 0 1 0 26 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( h = \223Hello world\224) Tj T* (>) Tj (>) Tj ( h[2] = \221g\222) Tj T* (TypeError: \221str\222 object does not support item assignment.) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 387.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (String Indexing and Splicing) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 369.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (String can be indexed like in C:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 326.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 42 re B*
Q
q
BT 1 0 0 1 0 26 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( h = \223hello world\224) Tj T* (>) Tj (>) Tj ( h[0]     # note index starts from zero) Tj T* (H) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 306.2394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (String can be sliced:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 227.4394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 78 re B*
Q
q
BT 1 0 0 1 0 62 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj (h[2:5]) Tj T* (llo) Tj T* (>) Tj (>) Tj (h[2:]) Tj T* (llo world) Tj T* (>) Tj (>) Tj (h[:2]) Tj T* (he) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 197.0394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (String Interpolation) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 179.0394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (The mod\(%\) operator in string is used for formatting or to insert variable in a string:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 112.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 66 re B*
Q
q
BT 1 0 0 1 0 50 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( print \223There are %d orange in the basket\224 % 32) Tj T* (There are 32 orange in the basket) Tj T*  T* (>) Tj (>) Tj ( print \223There are %d %s and %d %s in the basket\224 % \(32, \221orange\222, 12, \221apple\222\)) Tj T* (There are 32 orange and 12 apple in the basket) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 79.43937 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 22.8 re B*
Q
q
BT 1 0 0 1 0 2.8 Tm 16.8 TL /F6 14 Tf .12549 .262745 .360784 rg (Python Strings - Useful Functions) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Welcome to tectTutorial\222s documentation!) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (2) Tj T* ET
Q
Q
 
endstream
endobj
75 0 obj
<<
/Length 6795
>>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 40.01575 768.2394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 18 re B*
Q
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F5 10 Tf 12 TL (S = \223Jack and Jill\224) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 737.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (capitalize\(\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 719.8394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Capitalizes first letter of the string:) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 689.0394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( s.capitalize\(\)) Tj T* (>) Tj (>) Tj ( Jack And Jill) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 658.6394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (count\(str, beg=0, end=len\(string\)\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 640.6394 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Count how many times str occurs in a string or in a substring \(if beg and end is given\):) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 609.8394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 30 re B*
Q
q
BT 1 0 0 1 0 14 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( s.count\(\221J\222\)) Tj T* (2) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 579.4394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 20.4 re B*
Q
q
BT 1 0 0 1 0 2.4 Tm 14.4 TL /F6 12 Tf .12549 .262745 .360784 rg (find\(str, beg=0, end=len\(string\)\)) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 549.4394 cm
q
BT 1 0 0 1 0 14 Tm .202913 Tw 12 TL /F1 10 Tf 0 0 0 rg (Determine if str occurs in string or in a substring of string if starting index ) Tj /F3 10 Tf (beg) Tj /F1 10 Tf ( and ending index ) Tj /F3 10 Tf (end) Tj /F1 10 Tf ( are given return) Tj T* 0 Tw /F2 10 Tf (index) Tj /F1 10 Tf ( if found else ) Tj /F2 10 Tf (-1) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 494.6394 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 514.4441 54 re B*
Q
q
BT 1 0 0 1 0 38 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( s.find\(\221and\222\)) Tj T* (>) Tj (>) Tj ( 5) Tj T* (>) Tj (>) Tj ( s.find\(\221j\222\)) Tj T* (>) Tj (>) Tj ( -1) Tj T* ET
Q
Q
Q
Q
Q
q
1 0 0 1 40.01575 480.6394 cm
Q
q
1 0 0 1 40.01575 480.6394 cm
Q
q
1 0 0 1 40.01575 411.6394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 54 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Numbers) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 44 Tm  T* ET
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 48 cm
Q
q
1 0 0 1 20 36 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Python Support 2 type of numbers Integer and Floating point number) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 30 cm
Q
q
1 0 0 1 20 18 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To define an Integer use x = 7) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 12 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (To define a floating point number use x = 7.0) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 405.6394 cm
Q
q
1 0 0 1 40.01575 215.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 174.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 174.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F2 10 Tf 12 TL (Object Types) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
BT 1 0 0 1 0 164.8 Tm  T* ET
q
1 0 0 1 20 168.8 cm
Q
q
1 0 0 1 20 168.8 cm
Q
q
1 0 0 1 20 156.8 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Python automatically assign object type based on the assignment) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 20 150.8 cm
Q
q
1 0 0 1 20 0 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 135.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 135.8 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (For example) Tj T* ET
Q
Q
q
1 0 0 1 23 -3 cm
q
q
q
1 0 0 1 4.4 .4 cm
q
.666667 .8 .6 RG
.3 w
.933333 1 .8 rg
n -4 0 448.4441 138 re B*
Q
q
BT 1 0 0 1 0 122 Tm 12 TL /F5 10 Tf 0 0 0 rg (>) Tj (>) Tj ( x = 7) Tj T* (>) Tj (>) Tj ( type\(x\)) Tj T* (<) Tj (type 'int') Tj (>) Tj  T*  T* (>) Tj (>) Tj ( x = 'abc') Tj T* (>) Tj (>) Tj ( type\(x\)) Tj T* (<) Tj (type 'str') Tj (>) Tj  T*  T* (>) Tj (>) Tj ( x = 7.7) Tj T* (>) Tj (>) Tj ( type\(x\)) Tj T* (<) Tj (type 'float') Tj (>) Tj T* ET
Q
Q
Q
Q
Q
q
Q
Q
q
1 0 0 1 20 0 cm
Q
q
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 215.8394 cm
Q
q
1 0 0 1 40.01575 175.8394 cm
q
.8 .8 .8 RG
.3 w
.94902 .94902 .94902 rg
n -10 0 525.2441 30 re B*
Q
q
BT 1 0 0 1 0 4 Tm 24 TL /F2 20 Tf .12549 .262745 .360784 rg (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 40.01575 163.8394 cm
Q
q
1 0 0 1 40.01575 163.8394 cm
Q
q
1 0 0 1 40.01575 151.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 48 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F7 10 Tf 0 0 0 rg (genindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 145.8394 cm
Q
q
1 0 0 1 40.01575 133.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 48 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F7 10 Tf 0 0 0 rg (modindex) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 127.8394 cm
Q
q
1 0 0 1 40.01575 115.8394 cm
0 0 0 rg
BT /F1 10 Tf 12 TL ET
q
1 0 0 1 6 -3 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL 10.5 0 Td (\177) Tj T* -10.5 0 Td ET
Q
Q
q
1 0 0 1 23 -3 cm
q
.933333 1 .8 rg
n 0 0 36 12 re f*
BT 1 0 0 1 0 2 Tm 12 TL /F7 10 Tf 0 0 0 rg (search) Tj T* ET
Q
Q
q
Q
Q
q
1 0 0 1 40.01575 115.8394 cm
Q
q
1 0 0 1 40.01575 115.8394 cm
Q
q
1 0 0 1 34.01575 807.2126 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (Indices and tables) Tj T* ET
Q
Q
q
1 0 0 1 34.01575 22.67717 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (3) Tj T* ET
Q
Q
 
endstream
endobj
76 0 obj
<<
/Nums [ 0 77 0 R 1 78 0 R 2 79 0 R 3 80 0 R 4 81 0 R 
  5 82 0 R 6 83 0 R ]
>>
endobj
77 0 obj
<<
/S /D /St 1
>>
endobj
78 0 obj
<<
/S /D /St 2
>>
endobj
79 0 obj
<<
/S /r /St 1
>>
endobj
80 0 obj
<<
/S /r /St 2
>>
endobj
81 0 obj
<<
/S /D /St 1
>>
endobj
82 0 obj
<<
/S /D /St 2
>>
endobj
83 0 obj
<<
/S /D /St 3
>>
endobj
xref
0 84
0000000000 65535 f 
0000000073 00000 n 
0000000172 00000 n 
0000000279 00000 n 
0000000391 00000 n 
0000000596 00000 n 
0000000801 00000 n 
0000000969 00000 n 
0000001137 00000 n 
0000001305 00000 n 
0000001473 00000 n 
0000001642 00000 n 
0000001811 00000 n 
0000001980 00000 n 
0000002149 00000 n 
0000002318 00000 n 
0000002487 00000 n 
0000002656 00000 n 
0000002825 00000 n 
0000002994 00000 n 
0000003163 00000 n 
0000003332 00000 n 
0000003501 00000 n 
0000003670 00000 n 
0000003839 00000 n 
0000004008 00000 n 
0000004177 00000 n 
0000004346 00000 n 
0000004515 00000 n 
0000004684 00000 n 
0000004853 00000 n 
0000005022 00000 n 
0000005191 00000 n 
0000005360 00000 n 
0000005529 00000 n 
0000005698 00000 n 
0000005867 00000 n 
0000006036 00000 n 
0000006205 00000 n 
0000006652 00000 n 
0000006858 00000 n 
0000006974 00000 n 
0000007058 00000 n 
0000007164 00000 n 
0000007401 00000 n 
0000007626 00000 n 
0000007746 00000 n 
0000007952 00000 n 
0000008063 00000 n 
0000008269 00000 n 
0000008375 00000 n 
0000008633 00000 n 
0000008708 00000 n 
0000008893 00000 n 
0000009017 00000 n 
0000009159 00000 n 
0000009320 00000 n 
0000009468 00000 n 
0000009586 00000 n 
0000009717 00000 n 
0000009852 00000 n 
0000009988 00000 n 
0000010131 00000 n 
0000010253 00000 n 
0000010427 00000 n 
0000010543 00000 n 
0000010696 00000 n 
0000010835 00000 n 
0000010955 00000 n 
0000011056 00000 n 
0000011982 00000 n 
0000012107 00000 n 
0000016150 00000 n 
0000016275 00000 n 
0000025521 00000 n 
0000030819 00000 n 
0000037666 00000 n 
0000037764 00000 n 
0000037798 00000 n 
0000037832 00000 n 
0000037866 00000 n 
0000037900 00000 n 
0000037934 00000 n 
0000037968 00000 n 
trailer
<<
/ID 
[<8bf8918aed1f9b7dd4e34858506964b4><8bf8918aed1f9b7dd4e34858506964b4>]
% ReportLab generated PDF document -- digest (http://www.reportlab.com)

/Info 50 0 R
/Root 49 0 R
/Size 84
>>
startxref
38002
%%EOF
